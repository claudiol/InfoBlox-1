{"name":"Infoblox","tagline":"","body":"# InfoBlox\r\nThis is a InfoBlox GEM that can be used by users that want to communicate with the InfoBlox appliance.\r\n\r\nThis GEM has the following basic functionality:\r\n\r\n* addHost - Adds a host entry to InfoBlox\r\n* fetchHost - Fetches a host entry from InfoBlox\r\n* deleteHost - Deletes a host entry from InfoBlox\r\n* getAllNetworks - Retrieves all defined networks in InfoBlox\r\n* deleteIPHost - Deletes an IP record from a host entry.\r\n* addIPToHost - Adds an IP record to an existing host entry.\r\n* getIP - Checks if the the IP address exists in a record in InfoBlox.\r\n* fetchNetworkRef - Retries the network reference from InfoBlox for a particular network.\r\n* nextIP - Retrieves the next available IP address from InfoBlox.\r\n\r\n## InfoBlox Ruby API\r\n-----------------\r\nInfoBlox API to communicate with InfoBlox WAPI.\r\n\r\nThis GEM is targeted to be installed in a Cloudform Appliance and used within the Automate code.\r\n\r\nThe directory structure are:\r\n\r\ndoc/ - Contains YardDoc documentation for the Connection and WAPI classes.\r\n\r\ntest/ - Contains a test suite for the API.\r\n\r\nlib/ - Contains the source code for the Connection and WAPI APIs.\r\n\r\nspec/ - Contains the spec to build the GEM.\r\n\r\nMakefile - Make file to build the GEM.\r\n\r\n## Requirements\r\nThis GEM requires that the \"safe-yaml\" ruby gem is installed.  We have tested in Fedora and RHEL.\r\n\r\n    [claudiol@fedora20 nodes (claudiol-puppet-host-mod)]$ gem list\r\n    safe_yaml (0.9.4)\r\n\r\nWe have also tested the GEM in Mac OS X (Yosemite) using the YAML GEM.\r\n\r\n## YardDoc documentation\r\nWe try to document all our code with YardDoc.  The doc directory contains the generated YarDoc documentation for this GEM.\r\n\r\n## How to build it\r\n\r\n    [claudiol@fedora20 InfoBlox (claudiol-infoblox *)]$ gem build spec/InfoBlox.gemspec\r\n    Successfully built RubyGem\r\n    Name: InfoBloxConnection\r\n    Version: 0.2\r\n    File: InfoBloxConnection-0.2.gem\r\n    [claudiol@fedora20 InfoBlox (claudiol-infoblox *)]$\r\n\r\nIf you make changes please make sure that you do the following:\r\n\r\n* Make the changes to the code.\r\n* Test them and add a test in the test/infoblox-test.rb\r\n* Create a pull request\r\n\r\n\r\n## How to use the GEM\r\n\r\n### YAML Config File\r\nYou can use a config file with the InfoBlox GEM.  The config file format is:\r\n    #\r\n    # YAML Config file for InfoBlox Service\r\n    #\r\n    # Credentials config items\r\n    credentials:\r\n      username: \"admin\"\r\n      password: \"infoblox\"\r\n      servername: \"192.168.0.112\"\r\n      wapi_version: \"v1.4\"\r\n\r\nThen in your code you can do the following:\r\n\r\n    require 'InfoBlox'\r\n\r\n    options = {}\r\n    options[:config_file] = \"infoblox.yaml\"\r\n\r\n    @infoblox = InfoBlox::WAPI.new(options)\r\n\r\n## Passing Parameters\r\nYou can also just pass the Parameters required in the options hash like so:\r\n\r\n    require 'InfoBlox'\r\n\r\n    options = {}\r\n    options[:username] = \"admin\"\r\n    options[:password]: \"infoblox\"\r\n    options[:servername] = \"<IP Address>\"\r\n    options[:wapi_version] = \"v1.4\" # default is v1.2\r\n    @infoblox = InfoBlox::WAPI.new(options)\r\n\r\n### Within Cloudforms\r\nYou can use the GEM withing Cloudforms.  All you need to do is include the following statements:\r\n\r\n1. Make sure that the gem is installed on your Cloudforms Worker Appliance\r\n2. Add the following to the method you want to use the GEM in:\r\n\r\n        def my_cloudforms_method()\r\n          require 'InfoBlox'\r\n\r\n          options = {}\r\n          options[:username] = \"admin\"\r\n          options[:password]: \"infoblox\"\r\n          options[:servername] = \"<IP Address>\"\r\n          options[:wapi_version] = \"v1.4\" # default is v1.2\r\n          @infoblox = InfoBlox::WAPI.new(options)\r\n          ...\r\n        end\r\nObviously you can put the values in a variable inside a CloudForms State Machine but the above will work.\r\n\r\n\r\n### Outside of Cloudforms\r\n1. Make sure that the gem in installed.\r\n\r\n    gem install --local InfoBloxConnection-0.2.gem\r\n2. The following is an example on how to use the API:\r\n\r\n        require 'InfoBlox'\r\n\r\n        @network_ref = nil\r\n        @debug = false\r\n\r\n        def add_host_test(infoblox)\r\n          begin\r\n            options = {}\r\n            puts \"------- Add Host Test -------\" if @debug\r\n            options[:name] = \"my-host\"\r\n            options[:ipv4addr] = \"192.168.0.2\"\r\n            options[:view] = ' '\r\n            uooie = infoblox.addHost(options)\r\n            puts \"Returned Value: \" + uooie.inspect if @debug\r\n            puts \"------- Add Host Test -------\" if @debug\r\n            puts \"\" if @debug\r\n            return true\r\n          rescue => ex\r\n            puts \"------- FAILED: Add Host Test -------\" if @debug\r\n            puts ex.message\r\n            return false\r\n          end\r\n        end\r\n\r\n        # Tests start here\r\n        begin\r\n          @add_host_test = false\r\n          options = {}\r\n\r\n          options[:config_file] = \"infoblox.yaml\"\r\n          @infoblox = InfoBlox::WAPI.new(options)\r\n\r\n          @add_host_test = add_host_test(@infoblox)\r\n\r\n          puts \"add_host_test: #{@add_host_test}\"\r\n\r\n        rescue => ex\r\n          puts ex.message\r\n          puts ex.backtrace\r\n        end\r\n\r\n\r\n\r\n## Contact Information\r\nIf you have any questions regarding this code base please send an email to one of the following contributors:\r\n* Lester Claudio - lester@redhat.com\r\n* Jason Ritenour - jritenou@redhat.com\r\n* Jose Simonelli - jose@redhat.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}